#!/usr/bin/perl

use strict;
use warnings;

use Net::Domain qw(hostfqdn);
use Sh qw(cat);
use Socket;

use Getopt::Long;

Getopt::Long::Configure('bundling');

sub usage {
  warn @_, "\n" if @_;

  (my $ME = $0) =~ s,.*/,,;

  die <<EOUSAGE;
Usage: $ME [SRCHOST]
Gets the type of connection from SRCHOST to this host.
EOUSAGE
}

my %opts = ( verbosity => 1 );
GetOptions(
  \%opts,
  'help|h',
  'verbosity|verbose|v:+',
) or usage();
usage() if $opts{help} or @ARGV > 1;

my ($src_IP, $src_port, $dst_IP, $dst_port);
if (@ARGV) {
  $src_IP = $ARGV[0];

  # inet_ntoa(scalar gethostbyname $fqdn) can return 127.0.0.2 :-(
  my $fqdn = hostfqdn();
  ($dst_IP) = `host $fqdn` =~ /has address (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})/;
  die "Couldn't determine dest IP via 'host $fqdn'" unless $dst_IP;
}
else {
  if (exists $ENV{SSH_CONNECTION}) {
    # Source is the server initiating the remote connection.
    # Destination is the server we are running this script on.
    #
    # FIXME!  Attaching to a remote server's screen session
    # foils this logic.
    ($src_IP, $src_port, $dst_IP, $dst_port)
      = split /\s+/, $ENV{SSH_CONNECTION};
  }
  else {
    print "local\n";
    exit 0;
  }
}

debug(2, "from $src_IP to $dst_IP");

my $dir = "$ENV{HOME}/.connection-type/$src_IP/$dst_IP";
debug(3, "looking in $dir");

if (-e "$dir/type") {
  debug(3, "using $dir/type");
  print cat("$dir/type");
  exit 0;
}
if (-e "$dir/guessed-type") {
  debug(3, "using $dir/guessed-type");
  print cat("$dir/guessed-type");
  exit 0;
}

print "unknown\n";
exit 1;

sub debug {
  my $level = shift;
  warn @_, "\n" if $opts{verbosity} >= $level;
}
