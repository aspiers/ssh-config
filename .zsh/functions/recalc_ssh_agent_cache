#autoload

recalc_ssh_agent_cache () {
  export SSH_AGENT_PID=
  export SSH_AUTH_SOCK=

  echo "Recalculating ssh-agent info ..."

  if ! which rj ps >&/dev/null; then
    echo 'rj and ps must both be present on $PATH; aborting.'
    return 1
  fi

  : ${SSH_AGENT_PID:=`rj | awk "/^ *($USER|$UID) "'.*ssh-agent *$/ { print $2; exit }'`}

  if [[ "$SSH_AGENT_PID" != *[0-9]* ]]; then
    # If interactive, prompt whether to start a new one.
    # UPDATE: don't propmt; I always answer yes.
    if /bin/false && [[ -t 1 ]]; then
      echo "ssh-agent process not found; start a new one [y/N] ?"
      if read -q; then
        eval `ssh-agent`
        write_ssh_agent_cache
        return 0
      else
        echo "Unable to determine ssh-agent info; aborting."
        return 1
      fi
    else
      eval `ssh-agent`
      write_ssh_agent_cache
      return 0
    fi
  fi

#   : ${SSH_AUTH_SOCK:=`lsof -p $SSH_AGENT_PID |
#        awk '/agent-socket|^ssh-agent.*unix/ {print $NF; exit}'`}

#   if [ -z "$SSH_AUTH_SOCK" ]; then
#     echo "Huh? lsof didn't do the biz; aborting ..."
#     return 1
#   fi

  sockets=( /tmp/ssh-*/*(=U) )
  : ${SSH_AUTH_SOCK:=$sockets[0]}

  write_ssh_agent_cache
  return 0
}

write_ssh_agent_cache () {
  cat >|/tmp/.dsa-cache-$USER-$HOST <<EOF
export SSH_AGENT_PID=$SSH_AGENT_PID
export SSH_AUTH_SOCK=$SSH_AUTH_SOCK
EOF

  cat <<EOF 
Wrote info to ssh-agent cache:
    pid:    $SSH_AGENT_PID
    socket: $SSH_AUTH_SOCK
EOF
}

recalc_ssh_agent_cache "$@"
